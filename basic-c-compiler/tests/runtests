#!/usr/bin/env bash

# Run each test and compare
# against known good output

# x86-64 assembly for Linux
X86_64_TARGET="x86_64"
# AArch64 assembly for MacOS Apple Silicon
AARCH64_TARGET="aarch64"
ALLOWED_TARGETS="$X86_64_TARGET $AARCH64_TARGET"
target="$1"

#region Check target
is_allowed=0
for item in $ALLOWED_TARGETS; do
  if [ "$item" == "$target" ]; then
    is_allowed=1
    break
  fi
done
if [ $is_allowed -eq 0 ]; then
    echo "Invalid compiler target: $target"
    exit 1
fi
#endregion

#region Check compiler binary
if [ ! -f ../$target ]; then
    echo "Not found binary for target $target"
    exit 1
fi
#endregion

# Try to use each input source file
for i in input*
# We can't do anything if there's no file to test against
do if [ ! -f "out.$i" -a ! -f "err.$i" ]
   then echo "Can't run test on $i, no output file!"

   # Output file: compile the source, run it and
   # capture the output, and compare it against
   # the known-good output
   else if [ -f "out.$i" ]
        then
	  # Print the test name, compile it
	  # with our compiler
          echo -n $i
          ../$target $i

	  # Assemble the output, run it
	  # and get the output in trial.$i
        if [ "$target" == "$X86_64_TARGET" ]; then
            gcc --no-pie -o out out.s
        else
            echo "Add linker script for $AARCH64_TARGET"
        fi
          ./out > trial.$i

  	  # Compare this agains the correct output
          cmp -s "out.$i" "trial.$i"

	  # If different, announce failure
          # and print out the difference
          if [ "$?" -eq "1" ]
          then echo ": failed"
            diff -c "out.$i" "trial.$i"
            echo

	  # No failure, so announce success
          else echo ": OK"
          fi

   # Error file: compile the source and
   # capture the error messages. Compare
   # against the known-bad output. Same
   # mechanism as before
   else if [ -f "err.$i" ]
        then
          echo -n $i
          ../$target $i 2> "trial.$i"
          cmp -s "err.$i" "trial.$i"
          if [ "$?" -eq "1" ]
          then echo ": failed"
            diff -c "err.$i" "trial.$i"
            echo
          else echo ": OK"
          fi
        fi
     fi
   fi
   rm -f out out.s "trial.$i"
done
